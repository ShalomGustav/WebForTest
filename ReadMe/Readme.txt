Задание для кандидатов на позицию Junior разработчика веб-приложений на языке C#
Описание задания
Вам предстоит создать простое веб-приложение на платформе ASP.NET Core с использованием Entity Framework для управления списком пользователей. Приложение должно позволять пользователям регистрироваться, а администраторам – просматривать, редактировать и удалять пользователей.
Требования к заданию
1.	Проект и инфраструктура
•	Используйте .NET 6 или выше.
•	Создайте проект ASP.NET Core Web API.
•	Настройте проект для использования Entity Framework Core с базой данных SQLite.
2.	Модель данных
•	Создайте модель User с полями:
•	Id (int, Primary Key)
•	Login (string, уникальный, должен сохраняться в нижнем регистре)
•	Password (string)
•	Name (string)
•	Email (string)
•	BirthDate (DateTime)
•	IsAdmin (bool)
3.	Контроллеры и Endpoints
•	Создайте контроллер UsersController с CRUD операциями:
•	GET /users - Получение списка всех пользователей (доступно только администраторам).
•	GET /users/{id} - Получение информации о конкретном пользователе по ID.
•	POST /users - Создание нового пользователя.
•	PUT /users/{id} - Обновление информации о пользователе по ID.
•	DELETE /users/{id} - Удаление пользователя по ID (доступно только администраторам).
•	Создайте контроллер AuthController для аутентификации:
•	POST /auth/login - Аутентификация пользователя по логину и паролю. Возвращает JWT токен, если аутентификация успешна.
4.	Аутентификация и Авторизация
•	Реализуйте JWT аутентификацию.
•	Добавьте атрибуты авторизации к соответствующим методам контроллеров, чтобы ограничить доступ к административным операциям.
5.	Бизнес-логика
•	Убедитесь, что логин сохраняется в базе данных в нижнем регистре.
•	Добавьте валидацию на уникальность логина и email.
•	Добавьте валидацию на длину пароля (минимум 6 символов).
6.	Тестирование
•	Напишите несколько unit-тестов для проверки основных операций (создание пользователя, аутентификация, обновление данных).
Инструкции по выполнению
1.	Среда разработки: Используйте Visual Studio или Visual Studio Code.
2.	Контроль версий: Используйте Git для контроля версий вашего кода. Создайте публичный репозиторий на GitHub и разместите там ваш проект.
3.	README файл: Включите файл README.md в корневую директорию вашего проекта с краткими инструкциями по запуску и использованию вашего приложения, а также описанием основных функциональных возможностей.
Критерии оценки
1.	Правильность реализации функционала.
2.	Качество кода: Чистота кода, следование принципам SOLID, использование комментариев.
3.	Валидация и обработка ошибок.
4.	Использование Git и структура коммитов.
5.	Тестирование: Наличие и качество тестов.
Как подать работу
Отправьте ссылку на ваш репозиторий GitHub на [адрес электронной почты] до [укажите срок].
Контактная информация
Если у вас возникнут вопросы по заданию, вы можете связаться с нами по электронной почте [адрес электронной почты] или телефону [номер телефона].
________________________________________
Это задание проверит базовые знания кандидата в разработке веб-приложений на платформе .NET, работе с базами данных, аутентификации и авторизации, а также умение писать чистый и поддерживаемый код.

